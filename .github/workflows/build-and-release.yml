name: Build and Release Desktop App

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number for this release'
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [18.x, 20.x]
        include:
          - os: macos-latest
            artifact_name: '*.dmg'
            asset_name: 'macOS-DMG'
          - os: macos-latest
            artifact_name: '*.zip'
            asset_name: 'macOS-ZIP'
          - os: ubuntu-latest
            artifact_name: '*.AppImage'
            asset_name: 'Linux-AppImage'
          - os: ubuntu-latest
            artifact_name: '*.deb'
            asset_name: 'Linux-DEB'
          - os: ubuntu-latest
            artifact_name: '*.rpm'
            asset_name: 'Linux-RPM'
          - os: windows-latest
            artifact_name: '*.exe'
            asset_name: 'Windows-EXE'
          - os: windows-latest
            artifact_name: '*.msi'
            asset_name: 'Windows-MSI'

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm ci

    - name: Build for current platform
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: npm run dist


    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: dist/${{ matrix.artifact_name }}
        retention-days: 5
        if-no-files-found: error
        compression-level: 9

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v3

    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        release_name: Desktop App Release ${{ github.event.inputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        files: |
          *-DMG/*
          *-ZIP/*
          *-AppImage/*
          *-DEB/*
          *-RPM/*
          *-EXE/*
          *-MSI/*